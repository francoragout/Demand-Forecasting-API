// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id          String         @id @default(uuid())
  email       String         @unique
  password    String
  role        Role           @default(USER)
  createdAt   DateTime       @default(now())
  lastLogin   DateTime?
  salesData   SalesData[]
  forecasts   Forecast[]
  config      Configuration?
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model SalesData {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  sku          String
  date         DateTime
  quantity     Int
  price        Decimal  @db.Decimal(10, 4)
  promotion    Boolean
  category     String
  uploadedAt   DateTime @default(now())
  fileName     String
  dataVersion  Int
}

model Forecast {
  id              String   @id @default(uuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  sku             String
  forecastDate    DateTime
  baseValue       Int
  upperBound      Int
  lowerBound      Int
  confidenceLevel Float
  seasonalFactor  Float?
  trendComponent  Float?
  dataQualityScore Float?
  generatedAt     DateTime @default(now())
  modelVersion    String
}

model Configuration {
  id                   String   @id @default(uuid())
  userId               String   @unique
  user                 User     @relation(fields: [userId], references: [id])
  confidenceLevel      Float    @default(0.95)
  forecastHorizon      Int      @default(3)
  alertThresholds      Json?
  notificationSettings Json?
}
